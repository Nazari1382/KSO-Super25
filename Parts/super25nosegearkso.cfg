PART
{
// --- general parameters ---
name = super25nosegearkso
module = Part
author = helldiver
// --- asset parameters ---
MODEL
{
model = KSO/Parts/super25nosegearkso
}
scale = 1
rescaleFactor = 1


// --- node definitions ---
node_stack_top = 0.00, 0.76361, -0.33225, 0.0, 1.0, 0.0, 1
//node_attach = 0.00, 0.0, 0.00, 0.0, 0.0, -1.0, 1

// --- FX definitions ---



// --- Sound FX definition ---


// --- editor parameters ---
TechRequired = veryHeavyRocketry
entryCost = 7200
cost = 3500
category = Utility
subcategory = 0
title = KSO EWBCL Nose Gear
manufacturer = Murika Superstellar Inc.
description = Designed to withstand heavy landings, the larger EWBCL landing gear feature the same rugged design of the standard KSO. The nose gear feature landing lights, hydraulic actuators for steering, and towing hitch.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,0,0,1


// --- standard part parameters ---
mass = 0.53
dragModelType = default
maximum_drag = 0.3
minimum_drag = 0.2
angularDrag = 1

maxTemp = 3600 

heatConductivity = 0.24
thermalMassModifier = 7

emissiveConstant = 0.8
crashTolerance = 175
breakingForce = 133
breakingTorque = 250

//MODULE
//{
//	name = ModuleLandingGear
//}

//MODULE
//{
//	name = ModuleSteering
//	controlAxisType = Forward
//	steeringAxis = 0, 1, 0
//	steeringTransformName = Steering
//	steeringLocked = false
//	steeringCurve
//	{
// 	 key = 0 24
//	 key = 10 11
// 	 key = 30 2
//	 key = 100 1
// 	}
//}

MODULE
{
	name = FSwheel
	wheelColliderName = wheelCollider
	boundsCollider = Bounds
	wheelMeshName = Wheel
	suspensionParentName = suspension
	rotationAdjustment = 2.0 // adjust the visual rotation speed of the wheel meshes if they are off
	numberOfWheels = 1
	animationName = Take002
	disableColliderWhenRetracted = True
	hasMotor = False
	motorEnabled = False // set to false for landing gears to start unpowered.
	motorTorque = 3.75
	maxSpeed = 35 // the motorTorque is 1 at 0 speed, and 0 at this speed, meaning the actual max speed is probably way lower.
	overrideModelFrictionValues = True // MUST be on for any of the friction values to take effect, otherwise it uses the values in the models wheelCollider
	forwardsStiffness = 3.0 // Forwards friction (Unity default is 1.0, which is not enough to get up small hills)
	resourceConsumptionRate = 0.2
	resourceName = ElectricCharge
	//motorStartsReversed = True
	brakeTorque = 12
	brakeSpeed = 0.45
	animationLayer = 2
	deployedDrag = 0.35
	retractedDrag = 0.0
	guiActiveUnfocused = True
	unfocusedRange = 5.0
	//brakeEmissiveObjectName = noselight
	//onEmissiveColor = 1, 0.2, 0.2
	//offEmissiveColor = 0, 0, 0
	//deployingEmissiveColor = 0.2, 1, 0.2
	//disabledEmissiveColor = 0, 0, 0
}



MODULE
{
	name = FSpartTurner
	steerMultiplier = 12
	targetPartObject = Anim_NoseGear_Turning_Pivot
	rotationDirectionX = 0
	rotationDirectionY = 0
	rotationDirectionZ = 1
	defaultRotationX = 0
	defaultRotationY = 0
	defaultRotationZ = 0
	steeringEnabled = False	
	reversedInput = False
	steerMultiplier = 8	// in degrees
	steerMaxSpeed = 16	// speed where steering is lowest
	speedAdjustedSteering = True	
	speedAdjustedSteeringMinimumMultiplier = 0.05  // at top speed, steering is this number, 1 is full power
}


    MODULE
    {
        name = FSanimateGeneric
	animationLayer = 2
        animationName = navLights25
        startEventGUIName = Turn on landing spotlight
        endEventGUIName = Turn off landing spotlight
        toggleActionName = Toggle landing spotlight
    }
//MODULE
//    {
//        name = ModuleLight
//        lightName = LandingLight1
//        useAnimationDim = true    
//        lightBrightenSpeed = 1     
//        lightDimSpeed = 1           
//        resourceAmount = 0.02    
//        animationName = navLights 
//        useResources = true     
//    }

//MODULE
//{
//	name = FXModuleLookAtConstraint
//	CONSTRAINLOOKFX
//	{
//		targetName = dummypoint1
//		rotatorsName = dummysusp1
//	}
//}

//MODULE
//{
//	name = FXModuleLookAtConstraint
//	CONSTRAINLOOKFX
//	{
//		targetName = dummypoint2
//		rotatorsName = dummysusp2
//	}
//}
//
//}


}